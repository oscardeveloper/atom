{
  "_args": [
    [
      {
        "raw": "/tmp/d-1171016-29612-woi2rn.zutkfhia4i/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/tmp/d-1171016-29612-woi2rn.zutkfhia4i/package.tgz",
        "spec": "/tmp/d-1171016-29612-woi2rn.zutkfhia4i/package.tgz",
        "type": "local"
      },
      "/home/oscar/atom"
    ]
  ],
  "_from": "../../../tmp/d-1171016-29612-woi2rn.zutkfhia4i/package.tgz",
  "_id": "status-bar@1.8.15",
  "_inCache": true,
  "_location": "/status-bar",
  "_phantomChildren": {
    "event-kit": "2.4.0"
  },
  "_requested": {
    "raw": "/tmp/d-1171016-29612-woi2rn.zutkfhia4i/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/tmp/d-1171016-29612-woi2rn.zutkfhia4i/package.tgz",
    "spec": "/tmp/d-1171016-29612-woi2rn.zutkfhia4i/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../../../tmp/d-1171016-29612-woi2rn.zutkfhia4i/package.tgz",
  "_shasum": "ce27a6672b80543e7826959678f1b27e4c944a03",
  "_shrinkwrap": null,
  "_spec": "/tmp/d-1171016-29612-woi2rn.zutkfhia4i/package.tgz",
  "_where": "/home/oscar/atom",
  "bugs": {
    "url": "https://github.com/atom/status-bar/issues"
  },
  "configSchema": {
    "isVisible": {
      "type": "boolean",
      "default": true,
      "description": "Show status bar at the bottom of the workspace"
    },
    "fullWidth": {
      "order": 1,
      "type": "boolean",
      "default": true,
      "title": "Full-width",
      "description": "Fit the status-bar to the window's full-width"
    },
    "cursorPositionFormat": {
      "order": 2,
      "type": "string",
      "default": "%L:%C",
      "description": "Format for the cursor position status bar element, where %L is the line number and %C is the column number"
    },
    "selectionCountFormat": {
      "order": 2,
      "type": "string",
      "default": "(%L, %C)",
      "description": "Format for the selection count status bar element, where %L is the line count and %C is the character count"
    }
  },
  "dependencies": {
    "fs-plus": "^3.0.1",
    "grim": "^2.0.1",
    "underscore-plus": "^1.0.0"
  },
  "description": "Display information about the current editor such as cursor position, file path, grammar, current branch, ahead/behind commits counts, and line diff count.",
  "devDependencies": {
    "coffeelint": "^1.9.7"
  },
  "engines": {
    "atom": "*"
  },
  "homepage": "https://github.com/atom/status-bar#readme",
  "license": "MIT",
  "main": "./lib/main",
  "name": "status-bar",
  "optionalDependencies": {},
  "providedServices": {
    "status-bar": {
      "description": "A container for indicators at the bottom of the workspace",
      "versions": {
        "1.1.0": "provideStatusBar",
        "0.58.0": "legacyProvideStatusBar"
      }
    }
  },
  "readme": "# Status Bar package\n[![OS X Build Status](https://travis-ci.org/atom/status-bar.svg?branch=master)](https://travis-ci.org/atom/status-bar) [![Windows Build Status](https://ci.appveyor.com/api/projects/status/gu8tv4h6cnpeesg2/branch/master?svg=true)](https://ci.appveyor.com/project/Atom/status-bar/branch/master) [![Dependency Status](https://david-dm.org/atom/status-bar.svg)](https://david-dm.org/atom/status-bar)\n\nDisplay information about the current editor such as cursor position, file path, grammar, current branch, ahead/behind commit counts, and line diff count.\n\n![](https://f.cloud.github.com/assets/671378/2241819/f8418cb8-9ce5-11e3-87e5-109e965986d0.png)\n\n## Configuration\n\nThe status bar package accepts the following configuration values:\n\n* `status-bar.cursorPositionFormat` &mdash; A string that describes the format to use for the cursor position status bar tile. It defaults to `%L:%C`. In the format string, `%L` represents the 1-based line number and `%C` represents the 1-based column number.\n\n* `status-bar.selectionCountFormat` &mdash; A string that describes the format to use for the selection count status bar tile. It defaults to `(%L, %C)`. In the format string, `%L` represents the 1-based line count and `%C` represents the 1-based character count.\n\n## API\n\nThis package provides a service that you can use in other Atom packages. To use it, include `status-bar` in the `consumedServices` section of your `package.json`:\n\n```json\n{\n  \"name\": \"my-package\",\n  \"consumedServices\": {\n    \"status-bar\": {\n      \"versions\": {\n        \"^1.0.0\": \"consumeStatusBar\"\n      }\n    }\n  }\n}\n```\n\nThen, in your package's main module, call methods on the service:\n\n```coffee\nmodule.exports =\n  activate: -> # ...\n\n  consumeStatusBar: (statusBar) ->\n    @statusBarTile = statusBar.addLeftTile(item: myElement, priority: 100)\n\n  deactivate: ->\n    # ...\n    @statusBarTile?.destroy()\n    @statusBarTile = null\n```\n\nThe `status-bar` API has four methods:\n\n  * `addLeftTile({ item, priority })` - Add a tile to the left side of the status bar. Lower priority tiles are placed further to the left.\n  * `addRightTile({ item, priority })` - Add a tile to the right side of the status bar. Lower priority tiles are placed further to the right.\n\nThe `item` parameter to these methods can be a DOM element, a [jQuery object](http://jquery.com), or a model object for which a view provider has been registered in the [the view registry](https://atom.io/docs/api/latest/ViewRegistry).\n\n  * `getLeftTiles()` - Retrieve all of the tiles on the left side of the status bar.\n  * `getRightTiles()` - Retrieve all of the tiles on the right side of the status bar\n\nAll of these methods return `Tile` objects, which have the following methods:\n\n  * `getPriority()` - Retrieve the priority that was assigned to the `Tile` when it was created.\n  * `getItem()` - Retrieve the `Tile`'s item.\n  * `destroy()` - Remove the `Tile` from the status bar.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/atom/status-bar.git"
  },
  "version": "1.8.15"
}
